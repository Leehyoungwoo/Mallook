plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'io.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.projectlombok:lombok:1.18.26'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// ShedLock(with Redis)
	implementation 'net.javacrumbs.shedlock:shedlock-spring:4.29.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-redis-spring:4.29.0'

	// chatGPT
	implementation 'io.github.flashvayne:chatgpt-spring-boot-starter:1.0.0'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'com.h2database:h2'
	runtimeOnly 'com.h2database:h2'

	// spring-boot actuator
	implementation 'com.theokanning.openai-gpt3-java:service:0.12.0'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	testImplementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// mongodb 연결
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.10.1'

	// swagger - springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

	// https://mvnrepository.com/artifact/org.jeasy/easy-random-core
	testImplementation 'org.jeasy:easy-random-core:5.0.0'

	// json jackson
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// QueryDsl 설정
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}
clean {
	delete file('src/main/generated')
}
